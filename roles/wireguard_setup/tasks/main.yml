---
- name: Allowing traffic forwarding
  become: true
  ansible.posix.sysctl:
    name: net.ipv4.ip_forward
    value: "1"
    state: present

- name: Get interface
  shell: ip -o -4 route show to default | awk '{print $5}'
  register: interface
  args:
    executable: /bin/bash

- name: Install WireGuard
  apt:
    name: wireguard
    state: present
  become: yes

- name: Allow WireGuard connections through firewall
  ufw:
    rule: allow
    state: reloaded
    port: "{{ wg_port }}"
    proto: udp
  become: yes

- name: Generate WireGuard private server key
  shell: wg genkey
  register: wg_server_private_key
  args:
    executable: /bin/bash

- name: Derive WireGuard server public key
  shell: echo "{{ wg_server_private_key.stdout }}" | wg pubkey
  register: wg_server_public_key
  args:
    executable: /bin/bash

- name: Generate WireGuard client private keys
  shell: wg genkey
  register: client_private_keys
  loop: "{{ clients }}"
  args:
    executable: /bin/bash

- name: Generate WireGuard client public keys
  shell: echo "{{ item.stdout }}" | wg pubkey
  register: client_public_keys
  loop: "{{ client_private_keys.results }}"
  args:
    executable: /bin/bash

- name: Configure WireGuard clients
  template:
    src: wireguard_client.conf.j2
    dest: client_{{ item.name }}.conf
  vars:
    server_ip: "{{ inventory_hostname }}"
    server_port: "{{ wg_port }}"
    client_address: "{{ item.ip }}"
    server_public_key: "{{ wg_server_public_key.stdout }}"
    client_private_key: "{{ client_private_keys.results[item.index].stdout }}"
  loop: "{{ clients }}"

- name: Configure WireGuard server
  template:
    src: wireguard_server.conf.j2
    dest: /etc/wireguard/wg0.conf
  vars:
    server_port: "{{ wg_port }}"
    server_private_key: "{{ wg_server_private_key.stdout }}"
    iface: "{{ interface.stdout }}"
  become: yes

- name: Install qrencode
  apt:
    name: qrencode
    state: present
  become: yes

- name: Generate QR codes for client configurations
  shell: cat client_{{ item.name }}.conf | qrencode -t ansiutf8 > client_{{ item.name }}.qrcode
  loop: "{{ clients }}"
