---
- name: Install WireGuard
  apt:
    name: wireguard
    state: present
  become: yes

- name: Allow WireGuard connections through firewall
  ufw:
    rule: allow
    port: '51820'
    proto: udp
  become: yes

- name: Generate WireGuard private server key
  command: wg genkey
  register: wg_server_private_key
  changed_when: false

- name: Derive WireGuard server public key
  shell: echo "{{ wg_server_private_key.stdout }}" | wg pubkey
  register: wg_server_public_key
  changed_when: false
  args:
    executable: /bin/bash

- name: Generate WireGuard client private keys
  shell: wg genkey
  register: client_private_keys
  loop: "{{ range(1, 6)|list }}"
  args:
    executable: /bin/bash

- name: Generate WireGuard client public keys
  shell: echo "{{ item.stdout }}" | wg pubkey
  register: client_public_keys
  loop: "{{ client_private_keys.results }}"
  args:
    executable: /bin/bash

- name: Configure WireGuard clients
  template:
    src: wireguard_client.conf.j2
    dest: client{{ item }}.conf
  vars:
    client_private_key: "{{ client_private_keys.results[item - 1].stdout }}"
    client_number: "{{ item }}"
    server_public_key: "{{ wg_server_public_key.stdout }}"
    server_public_ip: "{{ inventory_hostname }}"
  loop: "{{ range(1, 6)|list }}"

- name: Configure WireGuard server
  template:
    src: wireguard_server.conf.j2
    dest: /etc/wireguard/wg0.conf
  vars:
    client1_public_key: "{{ client_public_keys.results[0].stdout }}"
    client2_public_key: "{{ client_public_keys.results[1].stdout }}"
    client3_public_key: "{{ client_public_keys.results[2].stdout }}"
    client4_public_key: "{{ client_public_keys.results[3].stdout }}"
    client5_public_key: "{{ client_public_keys.results[4].stdout }}"
  become: yes

- name: Enable and start WireGuard
  systemd:
    name: wg-quick@wg0
    state: started
    enabled: yes
  become: yes

- name: Install qrencode
  apt:
    name: qrencode
    state: present
  become: yes

- name: Generate QR codes for client configurations
  shell: cat client{{ item }}.conf | qrencode -t ansiutf8 > client{{ item }}.qrcode
  loop: "{{ range(1, 6)|list }}"
